
# Generated by Qodo Gen

import pytest

class TestPreparePredictionData:

    # Function correctly processes dataframe with default lookback period of 5
    def test_default_lookback_processing(self):
        import numpy as np
        import pandas as pd
    
        # Create test dataframe with 10 periods
        df = pd.DataFrame({
            'close': [10, 11, 12, 13, 14, 15, 16, 17, 18, 19],
            'log_return': [0.1, 0.09, 0.08, 0.07, 0.06, 0.05, 0.04, 0.03, 0.02, 0.01]
        })
    
        X, y1, y2, y3, y4 = prepare_prediction_data(df)
    
        # With lookback=5 and 10 periods, we expect 2 complete samples
        assert X.shape == (2, 10)  # 10 features (5 close + 5 log_return)
        assert len(y1) == len(y2) == len(y3) == len(y4) == 2
    
        # Verify first prediction values
        assert y1[0] == 16  # i=5 -> predict i+1
        assert y2[0] == 17  # i=5 -> predict i+2
        assert y3[0] == 18  # i=5 -> predict i+3
        assert y4[0] == 19  # i=5 -> predict i+4

    # Handle dataframe with length less than lookback + 4 periods
    def test_insufficient_data_length(self):
        import numpy as np
        import pandas as pd
    
        # Create test dataframe with only 8 periods (less than lookback + 4)
        df = pd.DataFrame({
            'close': [10, 11, 12, 13, 14, 15, 16, 17],
            'log_return': [0.1, 0.09, 0.08, 0.07, 0.06, 0.05, 0.04, 0.03]
        })
    
        X, y1, y2, y3, y4 = prepare_prediction_data(df)
    
        # Should return empty arrays since not enough data for predictions
        assert X.shape == (0, 10)  # 10 features but 0 samples
        assert len(y1) == len(y2) == len(y3) == len(y4) == 0